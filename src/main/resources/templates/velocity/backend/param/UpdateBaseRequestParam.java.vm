package ${javaRootPackage}.pojo.dto.param.${classname}.bases;

import com.fasterxml.jackson.annotation.JsonInclude;
import lombok.Getter;
import lombok.Setter;
import lombok.ToString;
import org.hibernate.validator.constraints.Length;
import org.hibernate.validator.constraints.Range;
import org.hibernate.validator.constraints.SafeHtml;
import javax.validation.constraints.*;
import java.io.Serializable;
import java.math.BigDecimal;
import ${javaRootPackage}.pojo.dto.param.bases.BaseUpdateParam;

@Setter
@Getter
@ToString(callSuper = true)
@JsonInclude(JsonInclude.Include.NON_NULL)
public class ${ClassName}UpdateBaseRequestParam extends BaseUpdateParam {

	private static final long serialVersionUID = -1L;

	@NotNull(message = "ID不能为空")
	@Range(min = 1, message = "ID数值不正确")
	private Long id;

#foreach ($column in $updateRequestParamColumns)
#if($column.attrType == "String")
	@SafeHtml(whitelistType = SafeHtml.WhiteListType.NONE)
	@Length(max = $column.characterMaximumLength, message = "$column.shortComment长度不正确")
#if($column.upperAttrName.toString().contains("Url"))
	@Pattern(regexp = "[a-zA-z]+://[^\\s]*", message = "链接地址必须包含：http:// 或 https:// 等前缀")
#elseif($column.upperAttrName.toString().contains("Email"))
	@Email(message = "邮箱地址格式不正确")
#elseif($column.upperAttrName.toString().contains("Phone"))
	@Pattern(regexp = "^[1][3,4,5,6,7,8,9][0-9]{9}$", message = "手机号格式有误")
#end
#end
#if($column.maxValue)
#if($column.dataType == "decimal")
	@DecimalMin(value = "0.00", inclusive = true, message = "$column.shortComment数值不正确")
	@DecimalMax(value = "$column.maxValue", inclusive = true, message = "$column.shortComment数值不正确")
#else
	@Range(min = 1, max = $column.maxValue, message = "$column.shortComment数值不正确")
#end
#end
	private $column.attrType $column.lowerAttrName;

#end

}
