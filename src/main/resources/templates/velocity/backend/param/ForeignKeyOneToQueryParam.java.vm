package ${javaRootPackage}.pojo.dto.param.${classname};

import ${javaRootPackage}.enums.DeleteEnum;
import ${javaRootPackage}.pojo.dto.param.bases.PageParam;
import ${javaRootPackage}.pojo.dto.param.bases.BaseQueryParam;
import org.hibernate.validator.constraints.Length;
import org.hibernate.validator.constraints.Range;
import org.hibernate.validator.constraints.SafeHtml;
import javax.validation.constraints.NotBlank;
import javax.validation.constraints.NotNull;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;

@Setter
@Getter
@NoArgsConstructor
@ToString(callSuper = true)
public class ${ForeignKeyColumn}RequestParam extends BaseQueryParam {

	private static final long serialVersionUID = -1L;

#if($boolIsNullable == false)
#if($attrType == "String")
	@NotBlank(message = "${shortComment}不能为空")
#else
	@NotNull(message = "${shortComment}不能为空")
#end
#end
#if($attrType == "String")
#if($dataType == "json")
	@SafeHtml(whitelistType = SafeHtml.WhiteListType.NONE)
#elseif($dataType == "text")
	@SafeHtml(whitelistType = SafeHtml.WhiteListType.NONE)
#else
	@Length(max = $characterMaximumLength, message = "${shortComment}长度不正确")
	@SafeHtml(whitelistType = SafeHtml.WhiteListType.NONE)
#end
#if($column.upperAttrName.toString().contains("Url"))
	@Pattern(regexp = "[a-zA-z]+://[^\\s]*", message = "链接地址必须包含：http:// 或 https:// 等前缀")
#elseif($column.upperAttrName.toString().contains("Email"))
	@Email(message = "邮箱地址格式不正确")
#elseif($column.upperAttrName.toString().contains("Phone"))
	@Pattern(regexp = "^[1][3,4,5,6,7,8,9][0-9]{9}$", message = "手机号格式有误")
#end
#end
#if($maxValue)
#if($dataType == "decimal")
	@DecimalMin(value = "0.00", inclusive = true, message = "${shortComment}数值不正确")
	@DecimalMax(value = "$maxValue", inclusive = true, message = "${shortComment}数值不正确")
#else
	@Range(min = 1, max = $maxValue, message = "${shortComment}数值不正确")
#end
#end
	private ${attrType} ${foreignKeyColumn};


}
